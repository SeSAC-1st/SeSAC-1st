<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <main>
      <h1><%= user.userName %></h1>
      <input type="file" name="thumbnail" id="thumbnail" />
      <input type="text" id="userNick" placeholder="닉네임을 입력하세요" />
      <input type="text" id="email" placeholder="이메일을 입력하세요" />
      <input type="text" id="address" placeholder="주소를 입력하세요" />
      <input type="date" id="birthday" placeholder="생일을 입력하세요" max="" />

      <button type="button" onclick="updateUser(<%= user %>);">수정</button>
      <br />
      <img
        src="<%= user.profileImg ? `/uploads/${user.profileImg}` : 'https://cdn-icons-png.flaticon.com/512/1077/1077012.png' %>"
        alt="Profile Image"
      /><br />
    </main>
    <script>
      // birthday 현재 날짜 이후 선택 안 되도록
      var now_utc = Date.now();
      var timeOff = new Date().getTimezoneOffset() * 60000;
      var today = new Date(now_utc - timeOff).toISOString().split('T')[0];
      document.getElementById('birthday').setAttribute('max', today);

      async function updateUser(user) {
        const formData = new FormData();
        const fileInput = document.querySelector('#thumbnail');
        const userNick = document.querySelector('#userNick').value;
        const email = document.querySelector('#email').value;
        const address = document.querySelector('#address').value;
        const birthday = document.querySelector('#birthday').value;

        formData.append('profileImg', fileInput.files[0]);
        formData.append('userNick', userNick);
        formData.append('email', email);
        formData.append('address', address);
        formData.append('birthday', birthday);

        axios({
          method: 'PATCH',
          url: `/user/${user.userId}`,
          data: formData,
          headers: {
            'Content-Type': 'multipart/form-data', // enctype="multipart/form-data"
          },
        })
          .then(function (res) {
            console.log(res.data); // 업데이트된 사용자 정보
            // img 태그의 src 속성값에 이미지 주소를 부여
            document.querySelector(
              'img'
            ).src = `/uploads/${res.data.updatedUser.profileImg}`;
            // img 태그에 thumbnail 클래스명 부여
            document.querySelector('img').classList.add('thumbnail');
          })
          .catch(function (error) {
            console.error(error);
          });
      }
    </script>
  </body>
</html>
